<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<mapper namespace="com.mapper.IPolicyProgramMapper">

	<!-- <select id="programList" resultType="com.model.PolicyProgrmVo">
			SELECT 
				pcm_seq, 
				pcm_name, 
				pcm_status,
				pcm_dc
			FROM tbl_policy_progrm_block_list
			where org_seq = #{org_seq}
			ORDER  BY pcm_seq desc
	</select> -->

	<select id="programList" resultType="com.model.PolicyProgrmVo" parameterType="com.model.PolicyProgrmVo">
			select
				pu_seq as pcm_seq,
				pu_name as pcm_name
			from
				tbl_policy_package_list
			where
				pu_seq in (
				select
					unnest(string_to_array(ppm_seq, ','))::int
				from
					tbl_updt_applc
				where
					org_seq in (
						with recursive search_org(domain,seq,p_seq,org_nm,org_ordr,section,level,path,cycle) as (
						select a.domain,a.seq,a.p_seq,a.org_nm,a.org_ordr,a.section,0,array[a.seq],false
						from tbl_org a 
						where a.seq = #{org_seq}
						and a.domain = #{domain}
						union all
						select b.domain,b.seq,b.p_seq,b.org_nm,b.org_ordr,b.section,level+1,path || b.seq,b.seq=any(path)
						from tbl_org b, search_org so 
						where b.p_seq = so.seq and b.domain = so.domain and not cycle)
						select seq
						from search_org 
						where 1=1
						order by level,org_ordr
					) and domain = #{domain})
			ORDER  BY pcm_seq desc
	</select>
	
	 <insert id="programSave" parameterType="java.util.HashMap">
		 WITH rows AS (
				INSERT INTO TBL_PROGRM_APPLC 
					(ORG_SEQ,									   
					PPM_SEQ,
					DOMAIN,
					JOB_ID) VALUES
					<if test="ppm_seq != null">
					<foreach collection="data" item="item" separator=",">
	            (#{item.org_seq},#{ppm_seq},#{domain},#{job_id})
	        		</foreach>
	        		</if>
			RETURNING seq, org_seq, ppm_seq, domain, job_id
		)   
		INSERT INTO tbl_progrm_applc_history (pa_seq, org_seq, ppm_seq, domain, job_id, RGSTR_DATE) SELECT seq, org_seq, ppm_seq, domain, job_id, now() FROM rows 		        	
	</insert>
	
	<delete id="programDelete" parameterType="java.util.HashMap">
	DELETE FROM TBL_PROGRM_APPLC WHERE ORG_SEQ IN (
	<foreach collection="data" item="item" separator=",">
            #{item.org_seq}
        		</foreach>
	) AND domain = #{domain}
	</delete>
	
	<select id="programApplcView" resultType="com.model.PolicyProgrmVo" parameterType="com.model.PolicyProgrmVo" >
 			SELECT array_to_string(array_agg(tua.ppm_seq),',')as ppm_seq FROM
			(SELECT distinct unnest(string_to_array(ppm_seq, ',')) ppm_seq
			FROM 
			TBL_PROGRM_APPLC 
			WHERE ORG_SEQ in (with recursive search_org(domain,seq,p_seq,org_nm,org_ordr,section,level,path,cycle) as (
			select a.domain,a.seq,a.p_seq,a.org_nm,a.org_ordr,a.section,0,array[a.seq],false
			from tbl_org a 
			where a.seq = #{org_seq}
			and a.domain = #{domain}
			union all
			select b.domain,b.seq,b.p_seq,b.org_nm,b.org_ordr,b.section,level+1,path || b.seq,b.seq=any(path)
			from tbl_org b, search_org so 
		where b.p_seq = so.seq and b.domain = so.domain and not cycle)
		select seq
		from search_org 
		where 1=1
		order by level,org_ordr) and domain = #{domain} )tua
	</select>
	
	<!-- <update id="programSave" parameterType="HashMap">
		WITH upsert AS (UPDATE TBL_PROGRM_APPLC SET
				ORG_SEQ			= #{org_seq}				 
				, PPM_SEQ		= #{ppm_seq}		
				
				RETURNING *)
				INSERT INTO TBL_PROGRM_APPLC (	
				SEQ							
				, ORG_SEQ									   
				, PPM_SEQ						
				)
				SELECT (SELECT COALESCE(max(seq),0)+1 AS seq FROM TBL_PROGRM_APPLC)
				,#{org_seq},#{ppm_seq} WHERE NOT EXISTS (SELECT * FROM upsert)
	</update> -->
<select id="getProgrmHistoryLastJob" parameterType="com.model.PolicyProgrmVo" resultType="int">
		SELECT COALESCE(max(JOB_ID),0) as job_id FROM tbl_progrm_applc_history WHERE DOMAIN = #{domain}
	</select>

</mapper>

