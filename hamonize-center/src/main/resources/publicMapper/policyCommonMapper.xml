<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<mapper namespace="com.mapper.IPolicyCommonMapper">

	
	<!-- <insert id="addAnsibleJobEvent" parameterType="java.util.HashMap">
			INSERT INTO tbl_ansible_event_job 
				(DOMAIN,
				JOB_ID,
				ORG_SEQ,
				DATA,
				RGSTR_DATE) 
				VALUES
				<foreach collection="data" item="item" separator=",">
				(
					(select distinct domain from tbl_org where inventory_id = #{inventory_id}::int),
					#{job_id}::int,
					#{org_seq}::int,
					#{item.result}::jsonb,
					now()
				) on conflict (JOB_ID) DO update set 
				DOMAIN = (select distinct domain from tbl_org where inventory_id = #{inventory_id}::int),
				JOB_ID = #{job_id}::int,
				ORG_SEQ = #{org_seq}::int,
				DATA = #{item.result}::jsonb,
				RGSTR_DATE = now()
				</foreach>
	</insert> -->

	<insert id="addAnsibleJobEventByHosts" parameterType="java.util.HashMap">
			INSERT INTO tbl_ansible_event_job 
				(DOMAIN,
				JOB_ID,
				ORG_SEQ,
				KIND,
				STATUS,
				DATA,
				RGSTR_DATE) 
				VALUES
				<foreach collection="data" item="item" separator=",">
				(
					<!-- (select distinct domain from tbl_org where inventory_id = #{inventory_id}::int), -->
					#{domain},
					#{job_id}::int,
					#{org_seq}::int,
					#{before_url},
					#{item.status},
					#{item.result}::jsonb,
					now()
				)
				</foreach>
	</insert>

	<insert id="addAnsibleJobEventByHost" parameterType="java.util.HashMap">
			INSERT INTO tbl_ansible_event_job 
				(DOMAIN,
				JOB_ID,
				ORG_SEQ,
				KIND,
				STATUS,
				DATA,
				RGSTR_DATE) 
				VALUES
				<foreach collection="data" item="item" separator=",">
				(
					<!-- (select distinct domain from tbl_org where inventory_id = #{inventory_id}::int), -->
					#{domain},
					#{before_job_id}::int,
					#{org_seq}::int,
					#{before_url},
					#{item.status},
					#{item.result}::jsonb,
					now()
				)
				</foreach>
	</insert>

	<insert id="addAnsibleJobEventByGroup" parameterType="java.util.HashMap">
			INSERT INTO tbl_ansible_policy_result 
				(DOMAIN,
				JOB_ID,
				ORG_SEQ,
				DATA,
				RGSTR_DATE) 
				VALUES
				(
					#{domain},
					#{job_id},
					#{org_seq}::int,
					#{object}::jsonb,
					now()
				)
	</insert>

	<insert id="addAnsibleJobRelaunchEventByHost" parameterType="java.util.HashMap">
		WITH rows AS (
			INSERT INTO tbl_ansible_event_job_relaunch 
				(DOMAIN,
				JOB_ID,
				PARENTS_JOB_ID,
				PC_UUID,
				DATA,
				RGSTR_DATE) 
				VALUES
				<foreach collection="data" item="item" separator=",">
				(
					(select distinct domain from tbl_org where inventory_id = #{inventory_id}::int),
					#{job_id}::int,
					#{parents_job_id}::int,
					#{pc_uuid},
					#{item.result}::jsonb,
					now()
				)
				</foreach>
				RETURNING data,parents_job_id,pc_uuid
		) UPDATE tbl_ansible_event_job SET data = (SELECT data from rows),RGSTR_DATE = now(), status = (SELECT data -> 'changed' from rows) WHERE job_id = (SELECT parents_job_id from rows)::int
		and (SELECT pc_uuid from rows) = data -> 'summary_fields' -> 'host' ->> 'description'
		<!-- and kind = 'umanage'
		and job_id > (SELECT parents_job_id from rows)::int
		and status = 'false' -->
	</insert>

	<select id="checkCountAnsibleJobId" parameterType="java.util.HashMap" resultType="Integer">
	SELECT count(*) FROM tbl_ansible_event_job WHERE JOB_ID = #{job_id}::int
	</select>

	<delete id="deleteAnsibleJobEvent" parameterType="java.util.HashMap">
	DELETE FROM tbl_ansible_event_job WHERE JOB_ID = #{job_id}::int
	</delete>

	<select id="checkCountAnsibleJobRelaunchId" parameterType="java.util.HashMap" resultType="Integer">
	SELECT count(*) FROM tbl_ansible_event_job_relaunch WHERE JOB_ID = #{job_id}::int
	</select>

	<delete id="deleteAnsibleJobRelaunchEvent" parameterType="java.util.HashMap">-> 'summary_fields' -> 'host' ->> 'description'
	DELETE FROM tbl_ansible_event_job_relaunch WHERE JOB_ID = #{job_id}::int
	</delete>

	<select id="getAnsibleJobEventByGroup" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT data ->> 'module_args' as module_args FROM tbl_ansible_policy_result where JOB_ID = #{job_id}::int
	</select>

	<!-- <select id="checkAnsibleJobFailOrNot" parameterType="com.model.LogInOutVo" resultType="java.util.HashMap">
	SELECT domain,job_id,status,data ->> 'host' as host_id FROM tbl_ansible_event_job 
		WHERE job_id = (select job_id from tbl_updt_applc 
		WHERE 
		org_seq = (SELECT org_seq FROM tbl_pc_mangr tpm where pc_uuid=#{uuid}) 
		and domain= #{domain})
		and data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
	</select> -->

	<select id="checkAnsibleJobFailOrNot" parameterType="com.model.LogInOutVo" resultType="java.util.HashMap">
	select *,
	(select host_id from tbl_pc_mangr where pc_uuid = #{uuid}) as host_id
		from tbl_ansible_event_job
		where (kind,rgstr_date)
		in(select kind,max(rgstr_date) from tbl_ansible_event_job where domain = #{domain} group by kind)
		and data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
	</select>

	<select id="getAnsibleLastSuccessJob" parameterType="com.model.LogInOutVo" resultType="java.util.HashMap">
	select *,
	(select host_id from tbl_pc_mangr where pc_uuid = #{uuid}) as host_id
		from tbl_ansible_event_job
		where (kind,rgstr_date)
		in(select kind,max(rgstr_date) as job_id from tbl_ansible_event_job where domain = #{domain} and status = 'true' group by kind)
		and data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		and kind = #{kind}
	</select>

	<select id="checkAnsibleJobFailOrNotList" parameterType="com.model.LogInOutVo" resultType="java.util.HashMap">
	select domain,job_id,status,data ->> 'host' as host_id,kind
		from tbl_ansible_event_job
		where (kind,job_id)
		in(select kind,max(job_id) as job_id from tbl_ansible_event_job where domain = #{domain} group by kind)
		and org_seq in (with recursive search_org(domain,seq,p_seq,org_nm,org_ordr,section,level,path,cycle) as (
			select a.domain,a.seq,a.p_seq,a.org_nm,a.org_ordr,a.section,0,array[a.seq],false
			from tbl_org a 
			where a.seq = #{org_seq}
			and a.domain = #{domain}
			union all
			select b.domain,b.seq,b.p_seq,b.org_nm,b.org_ordr,b.section,level+1,path || b.seq,b.seq=any(path)
			from tbl_org b, search_org so 
		where b.p_seq = so.seq and b.domain = so.domain and not cycle)
		select seq
		from search_org 
		where 1=1
		order by level,org_ordr)
	</select>

	<select id="checkAnsibleJobUpdtWhenOffPc" parameterType="com.model.LogInOutVo" resultType="java.util.HashMap">
		select * from tbl_updt_applc_history
		where domain = #{domain}
		and job_id = #{job_id}
		and org_seq = #{org_seq}
		union all
		select * from tbl_updt_applc_history
		where domain = #{domain}
		and job_id  = (select max(job_id) from tbl_updt_applc_history where domain = #{domain} and org_seq = (select org_seq from tbl_pc_mangr where pc_uuid = #{uuid}))
		and org_seq = (select org_seq from tbl_pc_mangr where pc_uuid = #{uuid})
	</select>

	<select id="checkAnsibleJobProgrmWhenOffPc" parameterType="com.model.LogInOutVo" resultType="java.util.HashMap">
		select * from tbl_progrm_applc_history
		where domain = #{domain}
		and job_id = #{job_id}
		and org_seq = #{org_seq}
		union all
		select * from tbl_progrm_applc_history
		where domain = #{domain}
		and job_id  = (select max(job_id) from tbl_progrm_applc_history where domain = #{domain} and org_seq = (select org_seq from tbl_pc_mangr where pc_uuid = #{uuid}))
		and org_seq = (select org_seq from tbl_pc_mangr where pc_uuid = #{uuid})
	</select>

	<select id="checkAnsibleJobFrwlWhenOffPc" parameterType="com.model.LogInOutVo" resultType="java.util.HashMap">
		select * from tbl_frwl_applc_history
		where domain = #{domain}
		and job_id = #{job_id}
		and org_seq = #{org_seq}
		union all
		select * from tbl_frwl_applc_history
		where domain = #{domain}
		and job_id  = (select max(job_id) from tbl_frwl_applc_history where domain = #{domain} and org_seq = (select org_seq from tbl_pc_mangr where pc_uuid = #{uuid}))
		and org_seq = (select org_seq from tbl_pc_mangr where pc_uuid = #{uuid})
	</select>

	<select id="checkAnsibleJobDeviceWhenOffPc" parameterType="com.model.LogInOutVo" resultType="java.util.HashMap">
		select * from tbl_device_applc_history
		where domain = #{domain}
		and job_id = #{job_id}
		and org_seq = #{org_seq}
		union all
		select * from tbl_device_applc_history
		where domain = #{domain}
		and job_id  = (select max(job_id) from tbl_device_applc_history where domain = #{domain} and org_seq = (select org_seq from tbl_pc_mangr where pc_uuid = #{uuid}))
	and org_seq = (select org_seq from tbl_pc_mangr where pc_uuid = #{uuid})
	</select>

	<!-- <select id="checkAnsibleJobUpdtWhenOffPc" parameterType="com.model.LogInOutVo" resultType="java.util.HashMap">
	select * from tbl_updt_applc_history where job_id in ( 
	(select job_id from tbl_ansible_event_job 
		where 
		job_id = 
		(select max(job_id) from tbl_ansible_event_job where 
		data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		and status = 'true' 
		and kind = 'umanage'
		)
		and data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		),
		(select job_id from tbl_ansible_event_job 
		where 
		job_id = 
		(select max(job_id) from tbl_ansible_event_job where 
		data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid} 
		and kind = 'umanage' 
		and status='false'
		)
		and data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		) 
) and org_seq  = (select org_seq from tbl_pc_mangr tpm where pc_uuid = #{uuid}) order by job_id asc
	</select>

	<select id="checkAnsibleJobProgrmWhenOffPc" parameterType="com.model.LogInOutVo" resultType="java.util.HashMap">
	select * from tbl_progrm_applc_history where job_id in ( 
	(select job_id from tbl_ansible_event_job 
		where 
		job_id = 
		(select max(job_id) from tbl_ansible_event_job where 
		data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		and status = 'true' 
		and kind = 'pmanage'
		)
		and data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		),
		(select job_id from tbl_ansible_event_job 
		where 
		job_id = 
		(select max(job_id) from tbl_ansible_event_job where 
		data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid} 
		and kind = 'pmanage' 
		and status='false'
		)
		and data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		) 
) and org_seq  = (select org_seq from tbl_pc_mangr tpm where pc_uuid = #{uuid}) order by job_id asc
	</select>

	<select id="checkAnsibleJobFrwlWhenOffPc" parameterType="com.model.LogInOutVo" resultType="java.util.HashMap">
	select * from tbl_frwl_applc_history where job_id in ( 
	(select job_id from tbl_ansible_event_job 
		where 
		job_id = 
		(select max(job_id) from tbl_ansible_event_job where 
		data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		and status = 'true' 
		and kind = 'fmanage'
		)
		and data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		),
		(select job_id from tbl_ansible_event_job 
		where 
		job_id = 
		(select max(job_id) from tbl_ansible_event_job where 
		data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid} 
		and kind = 'fmanage' 
		and status='false'
		)
		and data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		) 
) and org_seq  = (select org_seq from tbl_pc_mangr tpm where pc_uuid = #{uuid}) order by job_id asc
	</select>

	<select id="checkAnsibleJobDeviceWhenOffPc" parameterType="com.model.LogInOutVo" resultType="java.util.HashMap">
	select * from tbl_device_applc_history where job_id in ( 
	(select job_id from tbl_ansible_event_job 
		where 
		job_id = 
		(select max(job_id) from tbl_ansible_event_job where 
		data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		and status = 'true' 
		and kind LIKE '%' || 'dmanage' || '%'
		)
		and data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		),
		(select job_id from tbl_ansible_event_job 
		where 
		job_id = 
		(select max(job_id) from tbl_ansible_event_job where 
		data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid} 
		and kind LIKE '%' || 'dmanage' || '%'
		and status='false'
		)
		and data -> 'summary_fields' -> 'host' ->> 'description' = #{uuid}
		) 
) and org_seq  = (select org_seq from tbl_pc_mangr tpm where pc_uuid = #{uuid}) order by job_id asc
	</select> -->

	<select id="getPcCountByOrgSeq" parameterType="java.util.HashMap" resultType="Integer">
	select count(*) as count from tbl_pc_mangr 
		where org_seq in (with recursive search_org(domain,
					seq,
					p_seq,
					org_nm,
					org_ordr,
					level,
					path,
					cycle) as (
					select
						a.domain,
						a.seq,
						a.p_seq,
						a.org_nm,
						a.org_ordr,
						0,
						array[a.seq],
						false
					from
						tbl_org a
					where
						a.seq = #{org_seq}::int
						and a.domain = #{domain}
				union all
					select
						a.domain,
						a.seq,
						a.p_seq,
						a.org_nm,
						a.org_ordr,
						level + 1,
						path || a.seq,
						a.seq = any(path)
					from
						tbl_org a,
						search_org so
					where
						a.p_seq = so.seq
						and a.domain = so.domain
						and not cycle)
					select
						seq
					from
						search_org ) and domain = #{domain}
	</select>

	<select id="checkAnsibleLastSuccessJob" parameterType="com.model.PcMangrVo" resultType="java.util.HashMap">
	select *,
	(select host_id from tbl_pc_mangr where pc_uuid = #{pc_uuid}) as host_id
		from tbl_ansible_event_job
		where (kind,rgstr_date)
		in(select kind,max(rgstr_date) as job_id from tbl_ansible_event_job where domain = #{domain} and status = 'true' group by kind)
		and data -> 'summary_fields' -> 'host' ->> 'description' = #{pc_uuid}
	</select>


	<select id="comparePolicyUpdtBeforeAndAfter" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from tbl_updt_applc_history
		where domain = #{domain}
		and job_id = #{job_id}
		and org_seq = #{before_org_seq}
		union all
		select * from tbl_updt_applc_history
		where domain = #{domain}
		and job_id  = (select max(job_id) from tbl_updt_applc_history where domain = #{domain} and org_seq = #{after_org_seq})
		and org_seq = #{after_org_seq}
	</select>

	<select id="comparePolicyProgrmBeforeAndAfter" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from tbl_progrm_applc_history
		where domain = #{domain}
		and job_id = #{job_id}
		and org_seq = #{before_org_seq}
		union all
		select * from tbl_progrm_applc_history
		where domain = #{domain}
		and job_id  = (select max(job_id) from tbl_progrm_applc_history where domain = #{domain} and org_seq = #{after_org_seq})
		and org_seq = #{after_org_seq}
	</select>

	<select id="comparePolicyFrwlBeforeAndAfter" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from tbl_frwl_applc_history
		where domain = #{domain}
		and job_id = #{job_id}
		and org_seq = #{before_org_seq}
		union all
		select * from tbl_frwl_applc_history
		where domain = #{domain}
		and job_id  = (select max(job_id) from tbl_frwl_applc_history where domain = #{domain} and org_seq = #{after_org_seq})
		and org_seq = #{after_org_seq}
	</select>

	<select id="comparePolicyDeviceBeforeAndAfter" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from tbl_device_applc_history
		where domain = #{domain}
		and job_id = #{job_id}
		and org_seq = #{before_org_seq}
		union all
		select * from tbl_device_applc_history
		where domain = #{domain}
		and job_id  = (select max(job_id) from tbl_device_applc_history where domain = #{domain} and org_seq = #{after_org_seq})
		and org_seq = #{after_org_seq}
	</select>

</mapper>
