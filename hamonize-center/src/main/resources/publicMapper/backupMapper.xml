<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.IBackupMapper">

<insert id="backupSave" parameterType="java.util.HashMap">
		WITH rows AS (
			INSERT INTO TBL_BACKUP_APPLC 
					( ORG_SEQ									   
					, BAC_CYCLE_OPTION
					, BAC_CYCLE_TIME
					, BAC_GUBUN) VALUES
					<foreach collection="data" item="item" separator=",">
	            (#{item.org_seq},#{bac_cycle_option},#{bac_cycle_time},#{bac_gubun})
	        		</foreach>
		RETURNING bac_seq, org_seq, bac_cycle_option, bac_cycle_time, bac_gubun
		)   
		INSERT INTO tbl_backup_applc_history (bac_seq, org_seq, bac_cycle_option, bac_cycle_time, bac_gubun, insert_dt  )
		SELECT bac_seq, org_seq, bac_cycle_option, bac_cycle_time, bac_gubun, now() FROM rows 		        	
	</insert>
	
	<delete id="backupDelete" parameterType="java.util.HashMap">
	DELETE FROM TBL_BACKUP_APPLC WHERE ORG_SEQ IN (
	<foreach collection="data" item="item" separator=",">
            #{item.org_seq}
        		</foreach>
	)
	</delete>
	
	<select id="backupApplcView" resultType="com.model.BackupVo" parameterType="com.model.BackupVo" >
 			SELECT ORG_SEQ,BAC_CYCLE_OPTION,BAC_CYCLE_TIME,BAC_GUBUN
 			FROM 
 			TBL_BACKUP_APPLC 
 			WHERE ORG_SEQ = #{org_seq}
	</select>
	
	<select id="backupRCApplcView" resultType="java.util.HashMap" parameterType="java.util.HashMap" >
 			SELECT 
			 	seq, pc_status, pc_cpu, pc_memory, pc_disk, pc_macaddress, 
 				pc_ip, rgstr_date, updt_date, pc_hostname, pc_guid, org_seq, pc_disk_id, pc_cpu_id, pc_uuid 
 			FROM tbl_pc_mangr
 			WHERE org_seq in (with recursive search_org(domain,seq,p_seq,org_nm,org_ordr,section,level,path,cycle) as (
			select a.domain,a.seq,a.p_seq,a.org_nm,a.org_ordr,a.section,0,array[a.seq],false
			from tbl_org a 
			where a.seq = #{org_seq}
			and a.domain = #{domain}
			union all
			select b.domain,b.seq,b.p_seq,b.org_nm,b.org_ordr,b.section,level+1,path || b.seq,b.seq=any(path)
			from tbl_org b, search_org so 
		where b.p_seq = so.seq and b.domain = so.domain and not cycle)
		select seq
		from search_org 
		where 1=1
		order by level,org_ordr) AND domain = #{domain} order by seq asc
	</select>
	
	<select id="backupRecoveryList" resultType="java.util.HashMap" parameterType="java.util.HashMap" >
 			SELECT br_seq, br_org_seq, br_backup_path, br_backup_iso_dt, br_backup_status, br_backup_name, pc_seq 
 				FROM tbl_policy_backup_restore_list
 			WHERE pc_seq = #{seq}
	</select>

	<insert id="backupRecoverySave" parameterType="java.util.HashMap">
	WITH rows AS (
		INSERT INTO TBL_RESTORE_APPLC 
					( 
						DOMAIN,
						PC_SEQ,
						ORG_SEQ,
						BR_SEQ,
						JOB_ID
					) 
					VALUES
					(
						#{domain},
						#{pc_seq},
						(select org_seq from tbl_pc_mangr where domain = #{domain} and seq = #{pc_seq}),
						#{br_seq},
						#{job_id}
					)
					RETURNING seq, br_seq, org_seq, pc_seq, domain, job_id
	)
	INSERT INTO tbl_restore_applc_history (recv_applc_seq, br_seq, org_seq, pc_seq, domain, job_id, rgstr_date  )
		SELECT seq, br_seq, org_seq, pc_seq, domain, job_id, now() FROM rows
	</insert>
	
	<insert id="backupRecoveryLogSave" parameterType="java.util.HashMap">
	INSERT INTO TBL_RECOVERY_LOG 
				( ORG_SEQ
				, BR_SEQ
				, PC_SEQ
				, STATUS
				) VALUES
            (#{org_seq},#{br_seq},#{pc_seq},'N')
	</insert>
	
	<delete id="backupRecoveryDelete" parameterType="java.util.HashMap">
		DELETE FROM TBL_RESTORE_APPLC 
		WHERE pc_seq = #{pc_seq}
	</delete>

	<select id="getRestoreHistoryLastJob" parameterType="com.model.PolicyRestoreVo" resultType="int">
		SELECT COALESCE(max(JOB_ID),0) as job_id FROM tbl_restore_applc_history WHERE DOMAIN = #{domain} and ORG_SEQ = #{org_seq}
	</select>

</mapper>