<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mapper.ISvrlstMapper">

	<delete id="svrlstDelete" parameterType="com.model.SvrlstVo">
		delete from tbl_svrlst 
		where seq in (${chkdel})
		
	</delete>

	<select id="getSvrlstDataList" resultType="com.model.SvrlstVo" parameterType="com.model.SvrlstVo">
		SELECT 
			seq, 
			svr_nm, 
			svr_domain, 
			svr_ip, 
			svr_vip, 
			svr_used, 
			CASE 
				WHEN svr_port is null  THEN 'N'
				WHEN svr_port = ''  THEN 'N'
	            ELSE svr_port
	       END as svr_port,
			svr_dc, 
			insert_dt 
		FROM tbl_svrlst
	</select>


	<select id="getSvrlstList" resultType="com.model.SvrlstVo" parameterType="hashmap">
		SELECT 
			seq, 
			svr_nm, 
			svr_domain, 
			svr_ip, 
			svr_vip, 
			svr_dc, 
			svr_port ,
			svr_used,
			insert_dt 
		FROM tbl_svrlst
		WHERE svr_nm not like 'INFLUX_BUCKET' and svr_nm not like 'INFLUX_ORG' and svr_nm not like 'INFLUX_TOKEN'
		<!-- WHERE svr_nm not like 'INFLUX_%' -->
		order by seq desc
		OFFSET #{pagingVo.limitStart} LIMIT #{pagingVo.recordSize}
	</select>

	<select id="getVpnSvrlstList" resultType="com.model.SvrlstVo">
		SELECT *
		FROM tbl_svrlst
		order by seq desc
	</select>

	<select id="getVpnSvrUsed" parameterType="com.model.SvrlstVo" resultType="com.model.SvrlstVo">
		SELECT *
		FROM tbl_svrlst
		WHERE  svr_nm = #{svr_nm}
	</select>


	<select id="countSvrlstListInfo" parameterType="com.model.SvrlstVo" resultType="Integer">
		SELECT 
			count(*)  as tbl_cnt
		FROM tbl_svrlst
	</select>


	<insert id="svrlstInsert" parameterType="com.model.SvrlstVo">
		with upsert as 
		(
			update tbl_svrlst set 
				svr_nm = #{svr_nm}
				,svr_ip = #{svr_ip}
				,svr_vip = #{svr_vip}
				,svr_port = #{svr_port}
			where
				seq = #{seq}
			returning *
		)
		insert into tbl_svrlst
		(
			svr_nm,
			svr_ip,
			svr_vip,
			svr_port
		)
		select 
			#{svr_nm},
			#{svr_ip},
			#{svr_vip},
			#{svr_port}
		where not exists(select * from upsert);

	</insert>

	<insert id="envInsert" parameterType="com.model.SvrlstVo">
	update tbl_svrlst set 
		svr_ip = #{svr_ip}
	where
		seq = #{seq}

	</insert>

	<update id="vpnUsedUpdate" parameterType="com.model.SvrlstVo">
		update 
			tbl_svrlst
		set	
			svr_used = #{svr_used}
	</update>

	<select id="getProgrmList" resultType="com.model.HmProgrmUpdtVo">
		SELECT * FROM TBL_PROGRM_UDPT
		WHERE pu_name like 'hamonize%';
	</select>

	<update id="updatePollingTime" parameterType="com.model.HmProgrmUpdtVo">
		update
			TBL_PROGRM_UDPT
		set 
			polling_tm = #{polling_tm}
		where 
			pu_name = #{pu_name}
	</update>

</mapper>